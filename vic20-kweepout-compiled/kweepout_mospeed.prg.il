PROGRAMSTART:
JSR START
0:
MOVB 648,#30{INTEGER}
MOVB 36869,#240{INTEGER}
MOVB 36866,#150{INTEGER}
1:
NOP
MOV Y,#36874{INTEGER}
MOV V{REAL},Y
NOP
MOV Y,#5{INTEGER}
PUSH Y
MOV Y,#1{INTEGER}
PUSH Y
MOV Y,#0.0{REAL}
MOV I{REAL},Y
MOV A,(I{REAL})
JSR INITFOR
JSR READNUMBER
MOV X{REAL},Y
MOV Y,I{REAL}
MOV X,V{REAL}
ADD X,Y
PUSH X
MOV X,X{REAL}
POP Y
MOVB (Y),X
MOV A,#0{INTEGER}
JSR NEXT
CMP A,#0{INTEGER}
JE ($JUMP)
NOP
MOV Y,#1.1{REAL}
MOV L{REAL},Y
NOP
MOV Y,#3{INTEGER}
MOV D{REAL},Y
NOP
MOV Y,#0{INTEGER}
MOV K{REAL},Y
NOP
MOV Y,#9{INTEGER}
MOV X,V{REAL}
SUB X,Y
MOV Y,X
MOVB X,(Y)
MOV QR{REAL},X
2:
MOVB 36869,#240{INTEGER}
NOP
MOV A,#{clr}{down}{STRING}
JSR STROUT
NOP
MOV Y,#6{INTEGER}
CHGCTX #1
JSR SPC
NOP
MOV A,#{rvon}{yel}          {red}{cm-asterisk}{rvof}{STRING}
JSR STROUT
JSR LINEBREAK
3:
NOP
MOV Y,#6{INTEGER}
CHGCTX #1
JSR SPC
NOP
MOV A,#{rvon}{yel} kweepout {red} {rvof}{STRING}
JSR STROUT
JSR LINEBREAK
NOP
MOV Y,#6{INTEGER}
CHGCTX #1
JSR SPC
NOP
MOV A,#{rvon}{yel}          {red} {rvof}{STRING}
JSR STROUT
JSR LINEBREAK
4:
NOP
MOV Y,#6{INTEGER}
CHGCTX #1
JSR SPC
NOP
MOV A,#{red}{cm-asterisk}{rvon}          {rvof}{STRING}
JSR STROUT
JSR LINEBREAK
NOP
MOV A,#{down}{down}{cyn}6502ad: evil kweepoids{down}block the space lanes.{STRING}
JSR STROUT
JSR LINEBREAK
5:
NOP
MOV A,#{down}a bat is bred with one{down}purpose - destruction!{down}{grn}{STRING}
JSR STROUT
JSR LINEBREAK
6:
NOP
MOV A,#   by: steve mccrea     (c)2012 kweepa.com{STRING}
JSR STROUT
JSR LINEBREAK
JSR GOSUB
JSR 79
NOP
MOV A,#{down}{down}{red}  press fire to play{STRING}
JSR STROUT
JSR LINEBREAK
7:
NOP
MOV Y,#37145{INTEGER}
MOV J{REAL},Y
MOV Y,#9{INTEGER}
MOV X,J{REAL}
ADD X,Y
MOV Y,X
MOVB (Y),#127{INTEGER}
NOP
MOV Y,#8{INTEGER}
MOV X,J{REAL}
SUB X,Y
MOV Y,X
MOVB X,(Y)
MOV Y,#32{INTEGER}
AND X,Y
MOV Y,#0.0{REAL}
GT X,Y
CMP X,#0{REAL}
JNE NSKIP0
JMP SKIP0
NSKIP0:
JMP 7
SKIP0:
8:
NOP
MOV Y,#8142{INTEGER}
MOV B{REAL},Y
NOP
MOV Y,#30720{INTEGER}
MOV C{REAL},Y
MOVB 36865,#200{INTEGER}
MOVB 36869,#255{INTEGER}
NOP
MOV Y,#7680{INTEGER}
MOV S{REAL},Y
9:
NOP
MOV Y,#505{INTEGER}
PUSH Y
MOV Y,#1{INTEGER}
PUSH Y
MOV Y,#0.0{REAL}
MOV I{REAL},Y
MOV A,(I{REAL})
JSR INITFOR
MOV Y,I{REAL}
MOV X,S{REAL}
ADD X,Y
MOV Y,X
MOVB (Y),#160{INTEGER}
MOV Y,I{REAL}
MOV X,#38400.0{REAL}
ADD X,Y
MOV Y,X
MOVB (Y),#1{INTEGER}
MOV A,#0{INTEGER}
JSR NEXT
CMP A,#0{INTEGER}
JE ($JUMP)
NOP
MOV Y,D{REAL}
PUSH Y
NOP
MOV Y,#1{INTEGER}
PUSH Y
NOP
MOV Y,#1{INTEGER}
MOV I{REAL},Y
MOV A,(I{REAL})
JSR INITFOR
MOV Y,I{REAL}
MOV X,#8163{INTEGER}
ADD X,Y
MOV Y,X
MOVB (Y),#59{INTEGER}
MOV Y,I{REAL}
MOV X,#38883.0{REAL}
ADD X,Y
MOV Y,X
MOVB (Y),#3{INTEGER}
MOV A,#0{INTEGER}
JSR NEXT
CMP A,#0{INTEGER}
JE ($JUMP)
10:
NOP
MOV A,#{home}{STRING}
JSR STROUT
JSR LINEBREAK
NOP
MOV Y,#20{INTEGER}
PUSH Y
MOV Y,#1{INTEGER}
PUSH Y
MOV Y,#0.0{REAL}
MOV I{REAL},Y
MOV A,(I{REAL})
JSR INITFOR
NOP
MOV A,#{down}{STRING}
JSR STROUT
MOV A,#0{INTEGER}
JSR NEXT
CMP A,#0{INTEGER}
JE ($JUMP)
NOP
MOV A,#{rght}{rght}{rght}{rght}{rght}{rght}{rvon}{red}{STRING}
JSR STROUT
11:
NOP
MOV Y,#0{INTEGER}
MOV U{REAL},Y
NOP
MOV Y,#44{INTEGER}
PUSH Y
MOV Y,#1{INTEGER}
PUSH Y
MOV Y,#1{INTEGER}
MOV I{REAL},Y
MOV A,(I{REAL})
JSR INITFOR
MOV A,#1{INTEGER}
MOV X,I{REAL}
SHL X,A
MOV Y,#128{INTEGER}
ADD X,Y
MOVB 36876,X
NOP
MOV Y,#1{INTEGER}
RND X,Y
MOV Y,#5{INTEGER}
MUL X,Y
MOV Y,X
INT X,Y
MOV A,#1{INTEGER}
SHL X,A
MOV Y,#2{INTEGER}
ADD X,Y
MOV X{REAL},X
12:
NOP
MOV Y,#1{INTEGER}
RND X,Y
MOV Y,#12{INTEGER}
MUL X,Y
MOV Y,X
INT X,Y
MOV Y,#22{INTEGER}
MUL X,Y
MOV Y,#7724.0{REAL}
ADD X,Y
MOV Y{REAL},X
NOP
MOV Y,#1{INTEGER}
RND X,Y
MOV Y,L{REAL}
MUL X,Y
MOV Y,X
INT X,Y
MOV A,#2{INTEGER}
SHL X,A
MOV Y,X
MOV X,#48{INTEGER}
SUB X,Y
MOV F{REAL},X
NOP
MOV Y,#5{INTEGER}
MOV G{REAL},Y
NOP
MOV Y,#44{INTEGER}
MOV X,F{REAL}
EQ X,Y
CMP X,#0{REAL}
JNE NSKIP1
JMP SKIP1
NSKIP1:
NOP
MOV Y,#7{INTEGER}
MOV G{REAL},Y
SKIP1:
13:
NOP
MOV Y,X{REAL}
MOV X,Y{REAL}
ADD X,Y
MOV Z{REAL},X
NOP
MOV Y,#160{INTEGER}
PUSH Y
MOV Y,Z{REAL}
MOVB X,(Y)
POP Y
EQ X,Y
CMP X,#0{REAL}
JNE NSKIP2
JMP SKIP2
NSKIP2:
MOV Y,Z{REAL}
PUSH Y
MOV X,F{REAL}
POP Y
MOVB (Y),X
MOV Y,#1{INTEGER}
MOV X,Z{REAL}
ADD X,Y
PUSH X
MOV Y,#1{INTEGER}
MOV X,F{REAL}
ADD X,Y
POP Y
MOVB (Y),X
MOV Y,C{REAL}
MOV X,Z{REAL}
ADD X,Y
PUSH X
MOV X,G{REAL}
POP Y
MOVB (Y),X
MOV Y,C{REAL}
MOV X,Z{REAL}
ADD X,Y
MOV Y,#1{INTEGER}
ADD X,Y
PUSH X
MOV X,G{REAL}
POP Y
MOVB (Y),X
NOP
MOV Y,#1{INTEGER}
MOV X,U{REAL}
ADD X,Y
MOV U{REAL},X
SKIP2:
14:
NOP
MOV Y,#20{INTEGER}
MOV X,Y{REAL}
ADD X,Y
MOV Y,X{REAL}
SUB X,Y
MOV Z{REAL},X
NOP
MOV Y,#160{INTEGER}
PUSH Y
MOV Y,Z{REAL}
MOVB X,(Y)
POP Y
EQ X,Y
CMP X,#0{REAL}
JNE NSKIP3
JMP SKIP3
NSKIP3:
MOV Y,Z{REAL}
PUSH Y
MOV X,F{REAL}
POP Y
MOVB (Y),X
MOV Y,#1{INTEGER}
MOV X,Z{REAL}
ADD X,Y
PUSH X
MOV Y,#1{INTEGER}
MOV X,F{REAL}
ADD X,Y
POP Y
MOVB (Y),X
MOV Y,C{REAL}
MOV X,Z{REAL}
ADD X,Y
PUSH X
MOV X,G{REAL}
POP Y
MOVB (Y),X
MOV Y,C{REAL}
MOV X,Z{REAL}
ADD X,Y
MOV Y,#1{INTEGER}
ADD X,Y
PUSH X
MOV X,G{REAL}
POP Y
MOVB (Y),X
NOP
MOV Y,#1{INTEGER}
MOV X,U{REAL}
ADD X,Y
MOV U{REAL},X
SKIP3:
15:
MOV A,#0{INTEGER}
JSR NEXT
CMP A,#0{INTEGER}
JE ($JUMP)
16:
NOP
MOV Y,#200{INTEGER}
MOV Y{REAL},Y
NOP
MOV Y,#0.0{REAL}
MOV E{REAL},Y
NOP
MOV Y,#0.5{REAL}
MOV Z{REAL},Y
17:
NOP
MOV Y,#0.5{REAL}
MOV X,E{REAL}
SUB X,Y
MOV E{REAL},X
NOP
MOV Y,E{REAL}
MOV X,Y{REAL}
ADD X,Y
MOV Y{REAL},X
NOP
MOV Y,#0.0{REAL}
MOV X,Y{REAL}
LT X,Y
CMP X,#0{REAL}
JNE NSKIP4
JMP SKIP4
NSKIP4:
NOP
MOV Y,#0.0{REAL}
MOV Y{REAL},Y
NOP
MOV Y,E{REAL}
MOV X,#-0.4{REAL}
MUL X,Y
MOV E{REAL},X
NOP
MOV A,#2{INTEGER}
MOV X,Z{REAL}
SHL X,A
MOV Z{REAL},X
MOVB 36877,#140{INTEGER}
NOP
MOV Y,#0.5{REAL}
MOV X,E{REAL}
LT X,Y
CMP X,#0{REAL}
JNE NSKIP5
JMP SKIP5
NSKIP5:
JMP 19
SKIP5:
SKIP4:
18:
MOV Y,Y{REAL}
MOV X,QR{REAL}
ADD X,Y
MOVB 36865,X
MOV Y,Y{REAL}
MOV X,Z{REAL}
MUL X,Y
MOV Y,#128{INTEGER}
ADD X,Y
MOVB 36876,X
MOVB 36877,#0.0{REAL}
JMP 17
19:
MOVB 36876,#0.0{REAL}
MOVB 36877,#0.0{REAL}
NOP
MOV Y,#10{INTEGER}
MOV E{REAL},Y
NOP
MOV Y,#0.0{REAL}
MOV R{REAL},Y
20:
NOP
MOV Y,#1{INTEGER}
MOV X,E{REAL}
ADD X,Y
MOV X{REAL},X
NOP
MOV Y,#440{INTEGER}
MOV Y{REAL},Y
JSR GOSUB
JSR 67
NOP
MOV Y,#0.0{REAL}
MOV SB{REAL},Y
21:
MOV Y,#9{INTEGER}
MOV X,J{REAL}
ADD X,Y
MOV Y,X
MOVB (Y),#127{INTEGER}
NOP
MOV Y,#0.0{REAL}
MOV JL{REAL},Y
NOP
MOV Y,#8{INTEGER}
MOV X,J{REAL}
SUB X,Y
MOV Y,X
MOVB X,(Y)
MOV Y,#16{INTEGER}
AND X,Y
MOV Y,#0.0{REAL}
EQ X,Y
PUSH X
MOV Y,#0{INTEGER}
MOV X,E{REAL}
GT X,Y
POP Y
AND X,Y
CMP X,#0{REAL}
JNE NSKIP6
JMP SKIP6
NSKIP6:
NOP
MOV Y,#1{INTEGER}
MOV JL{REAL},Y
NOP
MOV Y,#1{INTEGER}
MOV X,LL{REAL}
ADD X,Y
MOV LL{REAL},X
NOP
MOV Y,#0.0{REAL}
MOV LR{REAL},Y
SKIP6:
22:
NOP
MOV Y,#0.0{REAL}
MOV JR{REAL},Y
NOP
MOV Y,#7{INTEGER}
MOV X,J{REAL}
ADD X,Y
MOV Y,X
MOVB X,(Y)
MOV Y,#128{INTEGER}
AND X,Y
MOV Y,#0.0{REAL}
EQ X,Y
PUSH X
MOV Y,#19{INTEGER}
MOV X,E{REAL}
LT X,Y
POP Y
AND X,Y
CMP X,#0{REAL}
JNE NSKIP7
JMP SKIP7
NSKIP7:
NOP
MOV Y,#1{INTEGER}
MOV JR{REAL},Y
NOP
MOV Y,#1{INTEGER}
MOV X,LR{REAL}
ADD X,Y
MOV LR{REAL},X
NOP
MOV Y,#0.0{REAL}
MOV LL{REAL},Y
SKIP7:
23:
NOP
MOV Y,JR{REAL}
MOV X,JL{REAL}
ADD X,Y
MOV Y,#0.0{REAL}
EQ X,Y
CMP X,#0{REAL}
JNE NSKIP8
JMP SKIP8
NSKIP8:
NOP
MOV Y,#0.0{REAL}
MOV LL{REAL},Y
NOP
MOV Y,LL{REAL}
MOV LR{REAL},Y
SKIP8:
24:
NOP
MOV Y,#8{INTEGER}
MOV X,J{REAL}
SUB X,Y
MOV Y,X
MOVB X,(Y)
MOV Y,#32{INTEGER}
AND X,Y
MOV Y,#0.0{REAL}
EQ X,Y
PUSH X
MOV Y,#1{INTEGER}
MOV X,N{REAL}
EQ X,Y
POP Y
AND X,Y
CMP X,#0{REAL}
JNE NSKIP9
JMP SKIP9
NSKIP9:
NOP
MOV Y,#0.0{REAL}
MOV N{REAL},Y
NOP
MOV Y,#1{INTEGER}
MOV F{REAL},Y
NOP
MOV Y,#-22.0{REAL}
MOV G{REAL},Y
SKIP9:
25:
MOV Y,#9{INTEGER}
MOV X,J{REAL}
ADD X,Y
MOV Y,X
MOVB (Y),#255{INTEGER}
NOP
MOV Y,#0.0{REAL}
MOV X,JL{REAL}
NEQ X,Y
CMP X,#0{REAL}
JNE NSKIP10
JMP SKIP10
NSKIP10:
MOV Y,E{REAL}
MOV X,B{REAL}
ADD X,Y
MOV Y,#2{INTEGER}
ADD X,Y
MOV Y,X
MOVB (Y),#160{INTEGER}
NOP
MOV Y,#1{INTEGER}
MOV X,E{REAL}
SUB X,Y
MOV E{REAL},X
NOP
MOV Y,#5{INTEGER}
MOV X,LL{REAL}
GT X,Y
PUSH X
MOV Y,#0{INTEGER}
MOV X,E{REAL}
GT X,Y
POP Y
AND X,Y
CMP X,#0{REAL}
JNE NSKIP11
JMP SKIP11
NSKIP11:
MOV Y,E{REAL}
MOV X,B{REAL}
ADD X,Y
MOV Y,#2{INTEGER}
ADD X,Y
MOV Y,X
MOVB (Y),#160{INTEGER}
NOP
MOV Y,#1{INTEGER}
MOV X,E{REAL}
SUB X,Y
MOV E{REAL},X
SKIP11:
SKIP10:
27:
NOP
MOV Y,#0.0{REAL}
MOV X,JR{REAL}
NEQ X,Y
CMP X,#0{REAL}
JNE NSKIP12
JMP SKIP12
NSKIP12:
MOV Y,E{REAL}
MOV X,B{REAL}
ADD X,Y
MOV Y,X
MOVB (Y),#160{INTEGER}
NOP
MOV Y,#1{INTEGER}
MOV X,E{REAL}
ADD X,Y
MOV E{REAL},X
NOP
MOV Y,#5{INTEGER}
MOV X,LR{REAL}
GT X,Y
PUSH X
MOV Y,#19{INTEGER}
MOV X,E{REAL}
LT X,Y
POP Y
AND X,Y
CMP X,#0{REAL}
JNE NSKIP13
JMP SKIP13
NSKIP13:
MOV Y,E{REAL}
MOV X,B{REAL}
ADD X,Y
MOV Y,X
MOVB (Y),#160{INTEGER}
NOP
MOV Y,#1{INTEGER}
MOV X,E{REAL}
ADD X,Y
MOV E{REAL},X
SKIP13:
SKIP12:
28:
MOV Y,E{REAL}
MOV X,B{REAL}
ADD X,Y
MOV Y,X
MOVB (Y),#56{INTEGER}
MOV Y,E{REAL}
MOV X,B{REAL}
ADD X,Y
MOV Y,#1{INTEGER}
ADD X,Y
MOV Y,X
MOVB (Y),#57{INTEGER}
MOV Y,E{REAL}
MOV X,B{REAL}
ADD X,Y
MOV Y,#2{INTEGER}
ADD X,Y
MOV Y,X
MOVB (Y),#58{INTEGER}
NOP
MOV Y,Q{REAL}
MOV O{REAL},Y
NOP
MOV Y,#1{INTEGER}
MOV X,N{REAL}
EQ X,Y
CMP X,#0{REAL}
JNE NSKIP14
JMP SKIP14
NSKIP14:
NOP
MOV Y,#1{INTEGER}
MOV X,E{REAL}
ADD X,Y
MOV X{REAL},X
JMP 36
SKIP14:
29:
NOP
MOV Y,#0.0{REAL}
MOV H{REAL},Y
NOP
MOV Y,F{REAL}
MOV X,Q{REAL}
ADD X,Y
MOV Y,X
MOVB X,(Y)
MOV Y,#60{INTEGER}
LT X,Y
CMP X,#0{REAL}
JNE NSKIP15
JMP SKIP15
NSKIP15:
NOP
MOV Y,F{REAL}
MOV Z{REAL},Y
JSR GOSUB
JSR 50
NOP
MOV Y,F{REAL}
MOV X,#-1{INTEGER}
MUL X,Y
MOV F{REAL},X
NOP
MOV Y,#1{INTEGER}
MOV H{REAL},Y
SKIP15:
30:
NOP
MOV Y,G{REAL}
MOV X,Q{REAL}
ADD X,Y
MOV Y,X
MOVB X,(Y)
MOV Y,#60{INTEGER}
LT X,Y
CMP X,#0{REAL}
JNE NSKIP16
JMP SKIP16
NSKIP16:
NOP
MOV Y,G{REAL}
MOV Z{REAL},Y
JSR GOSUB
JSR 50
NOP
MOV Y,G{REAL}
MOV X,#-1{INTEGER}
MUL X,Y
MOV G{REAL},X
NOP
MOV Y,#1{INTEGER}
MOV H{REAL},Y
NOP
MOV Y,#0.0{REAL}
MOV X,SB{REAL}
GT X,Y
PUSH X
MOV Y,#440{INTEGER}
MOV X,Y{REAL}
EQ X,Y
POP Y
AND X,Y
CMP X,#0{REAL}
JNE NSKIP17
JMP SKIP17
NSKIP17:
NOP
MOV Y,#1{INTEGER}
MOV X,SB{REAL}
SUB X,Y
MOV SB{REAL},X
JSR GOSUB
JSR 67
JMP 37
SKIP17:
SKIP16:
31:
NOP
MOV Y,G{REAL}
MOV X,Q{REAL}
ADD X,Y
MOV Y,F{REAL}
ADD X,Y
MOV Y,X
MOVB X,(Y)
MOV Y,#60{INTEGER}
LT X,Y
PUSH X
MOV Y,#0.0{REAL}
MOV X,H{REAL}
EQ X,Y
POP Y
AND X,Y
CMP X,#0{REAL}
JNE NSKIP18
JMP SKIP18
NSKIP18:
NOP
MOV Y,F{REAL}
MOV X,G{REAL}
ADD X,Y
MOV Z{REAL},X
JSR GOSUB
JSR 50
NOP
MOV Y,F{REAL}
MOV X,#-1{INTEGER}
MUL X,Y
MOV F{REAL},X
NOP
MOV Y,G{REAL}
MOV X,#-1{INTEGER}
MUL X,Y
MOV G{REAL},X
NOP
MOV Y,#1{INTEGER}
MOV H{REAL},Y
SKIP18:
32:
NOP
MOV Y,#1{INTEGER}
MOV X,H{REAL}
EQ X,Y
CMP X,#0{REAL}
JNE NSKIP19
JMP SKIP19
NSKIP19:
JMP 29
SKIP19:
33:
NOP
MOV Y,F{REAL}
MOV X,X{REAL}
ADD X,Y
MOV X{REAL},X
NOP
MOV Y,#0.0{REAL}
MOV X,X{REAL}
EQ X,Y
CMP X,#0{REAL}
JNE NSKIP20
JMP SKIP20
NSKIP20:
NOP
MOV Y,#1{INTEGER}
MOV F{REAL},Y
SKIP20:
34:
NOP
MOV Y,#21{INTEGER}
MOV X,X{REAL}
EQ X,Y
CMP X,#0{REAL}
JNE NSKIP21
JMP SKIP21
NSKIP21:
NOP
MOV Y,#-1.0{REAL}
MOV F{REAL},Y
SKIP21:
35:
NOP
MOV Y,G{REAL}
MOV X,Y{REAL}
ADD X,Y
MOV Y{REAL},X
NOP
MOV Y,#0.0{REAL}
MOV X,Y{REAL}
EQ X,Y
CMP X,#0{REAL}
JNE NSKIP22
JMP SKIP22
NSKIP22:
NOP
MOV Y,G{REAL}
MOV X,#-1{INTEGER}
MUL X,Y
MOV G{REAL},X
SKIP22:
36:
NOP
MOV Y,Y{REAL}
MOV X,S{REAL}
ADD X,Y
MOV Y,X{REAL}
ADD X,Y
MOV Q{REAL},X
MOV Y,X
MOVB (Y),#59{INTEGER}
MOV Y,C{REAL}
MOV X,Q{REAL}
ADD X,Y
MOV Y,X
MOVB (Y),#3{INTEGER}
NOP
MOV Y,Q{REAL}
MOV X,O{REAL}
NEQ X,Y
CMP X,#0{REAL}
JNE NSKIP23
JMP SKIP23
NSKIP23:
MOV Y,O{REAL}
MOVB (Y),#160{INTEGER}
SKIP23:
37:
NOP
MOV Y,Q{REAL}
MOV O{REAL},Y
NOP
MOV Y,#4{INTEGER}
PUSH Y
MOV Y,#1{INTEGER}
PUSH Y
MOV Y,#0.0{REAL}
MOV I{REAL},Y
MOV A,(I{REAL})
JSR INITFOR
NOP
MOV Y,#0{INTEGER}
MOV X,I{REAL}
PUSH Y
MOV G,S[]{REAL}
CHGCTX #0
JSR ARRAYACCESS
POP Y
NEQ X,Y
CMP X,#0{REAL}
JNE NSKIP24
JMP SKIP24
NSKIP24:
JSR GOSUB
JSR 58
SKIP24:
38:
MOV A,#0{INTEGER}
JSR NEXT
CMP A,#0{INTEGER}
JE ($JUMP)
NOP
MOV Y,#440{INTEGER}
MOV X,Y{REAL}
GT X,Y
CMP X,#0{REAL}
JNE NSKIP25
JMP SKIP25
NSKIP25:
JMP 44
SKIP25:
40:
NOP
MOV Y,#0.0{REAL}
MOV X,CD{REAL}
GT X,Y
CMP X,#0{REAL}
JNE NSKIP26
JMP SKIP26
NSKIP26:
NOP
MOV Y,#1{INTEGER}
MOV X,CD{REAL}
SUB X,Y
MOV CD{REAL},X
NOP
MOV Y,#0.0{REAL}
MOV X,CD{REAL}
EQ X,Y
CMP X,#0{REAL}
JNE NSKIP27
JMP SKIP27
NSKIP27:
JMP 47
SKIP27:
SKIP26:
41:
NOP
MOV Y,#0.0{REAL}
MOV X,MC{REAL}
GT X,Y
CMP X,#0{REAL}
JNE NSKIP28
JMP SKIP28
NSKIP28:
NOP
MOV Y,#1{INTEGER}
MOV X,MC{REAL}
SUB X,Y
MOV MC{REAL},X
NOP
MOV Y,#0.0{REAL}
MOV X,MC{REAL}
EQ X,Y
CMP X,#0{REAL}
JNE NSKIP29
JMP SKIP29
NSKIP29:
JSR GOSUB
JSR 64
SKIP29:
SKIP28:
42:
NOP
MOV Y,#0.0{REAL}
MOV X,R{REAL}
GT X,Y
CMP X,#0{REAL}
JNE NSKIP30
JMP SKIP30
NSKIP30:
JSR GOSUB
JSR 68
SKIP30:
43:
JMP 21
44:
NOP
MOV A,#lost  ball{STRING}
JSR STROUT
JSR GOSUB
JSR 66
NOP
MOV Y,#5{INTEGER}
MOV MC{REAL},Y
MOV Y,Q{REAL}
MOVB (Y),#160{INTEGER}
MOV Y,C{REAL}
MOV X,Q{REAL}
ADD X,Y
MOV Y,X
MOVB (Y),#1{INTEGER}
MOV Y,D{REAL}
MOV X,#8163{INTEGER}
ADD X,Y
MOV Y,X
MOVB (Y),#160{INTEGER}
NOP
MOV Y,#1{INTEGER}
MOV X,D{REAL}
SUB X,Y
MOV D{REAL},X
NOP
MOV Y,#0.0{REAL}
MOV X,D{REAL}
GT X,Y
CMP X,#0{REAL}
JNE NSKIP31
JMP SKIP31
NSKIP31:
JMP 20
SKIP31:
46:
NOP
MOV A,#game  over{STRING}
JSR STROUT
JSR GOSUB
JSR 66
JSR RUN
47:
NOP
MOV Y,D{REAL}
MOV X,#100{INTEGER}
MUL X,Y
PUSH X
MOV Y,#1000{INTEGER}
MOV X,K{REAL}
ADD X,Y
POP Y
ADD X,Y
MOV K{REAL},X
JSR GOSUB
JSR 78
NOP
MOV Y,#0.0{REAL}
MOV Y{REAL},Y
NOP
MOV Y,Y{REAL}
MOV E{REAL},Y
NOP
MOV Y,#0.1{REAL}
MOV X,L{REAL}
ADD X,Y
MOV L{REAL},X
NOP
MOV Y,#2{INTEGER}
MOV X,L{REAL}
GT X,Y
CMP X,#0{REAL}
JNE NSKIP32
JMP SKIP32
NSKIP32:
NOP
MOV Y,#2{INTEGER}
MOV L{REAL},Y
SKIP32:
48:
NOP
MOV Y,#0.5{REAL}
MOV X,E{REAL}
ADD X,Y
MOV E{REAL},X
NOP
MOV Y,E{REAL}
MOV X,Y{REAL}
ADD X,Y
MOV Y{REAL},X
MOV Y,QR{REAL}
ADD X,Y
MOVB 36865,X
NOP
MOV Y,Y{REAL}
MOV X,#0.5{REAL}
MUL X,Y
MOV Y,#128{INTEGER}
ADD X,Y
MOV A{REAL},X
MOVB 36876,X
NOP
MOV Y,#200{INTEGER}
MOV X,Y{REAL}
LT X,Y
CMP X,#0{REAL}
JNE NSKIP33
JMP SKIP33
NSKIP33:
JMP 48
SKIP33:
49:
MOVB 36876,#0.0{REAL}
JMP 9
50:
MOVB 36876,#140{INTEGER}
NOP
MOV Y,Z{REAL}
MOV X,Q{REAL}
ADD X,Y
MOV Y,#8190{INTEGER}
AND X,Y
MOV Z{REAL},X
NOP
MOV Y,Z{REAL}
MOVB X,(Y)
MOV W{REAL},X
NOP
MOV Y,#44{INTEGER}
MOV X,W{REAL}
EQ X,Y
CMP X,#0{REAL}
JNE NSKIP34
JMP SKIP34
NSKIP34:
MOV Y,Z{REAL}
MOVB (Y),#48{INTEGER}
MOV Y,#1{INTEGER}
MOV X,Z{REAL}
ADD X,Y
MOV Y,X
MOVB (Y),#49{INTEGER}
MOV Y,C{REAL}
MOV X,Z{REAL}
ADD X,Y
MOV Y,X
MOVB (Y),#5{INTEGER}
MOV Y,C{REAL}
MOV X,Z{REAL}
ADD X,Y
MOV Y,#1{INTEGER}
ADD X,Y
MOV Y,X
MOVB (Y),#5{INTEGER}
JMP 57
SKIP34:
52:
NOP
MOV Y,#48{INTEGER}
MOV X,W{REAL}
NEQ X,Y
CMP X,#0{REAL}
JNE NSKIP35
JMP SKIP35
NSKIP35:
JMP 57
SKIP35:
53:
NOP
MOV Y,#10{INTEGER}
MOV X,K{REAL}
ADD X,Y
MOV K{REAL},X
JSR GOSUB
JSR 78
MOVB 36877,#140{INTEGER}
NOP
MOV Y,#1{INTEGER}
MOV X,U{REAL}
SUB X,Y
MOV U{REAL},X
NOP
MOV Y,#0.0{REAL}
MOV X,U{REAL}
EQ X,Y
CMP X,#0{REAL}
JNE NSKIP36
JMP SKIP36
NSKIP36:
NOP
MOV Y,#10{INTEGER}
MOV CD{REAL},Y
SKIP36:
54:
MOV Y,Z{REAL}
MOVB (Y),#46{INTEGER}
MOV Y,#1{INTEGER}
MOV X,Z{REAL}
ADD X,Y
MOV Y,X
MOVB (Y),#47{INTEGER}
MOV Y,C{REAL}
MOV X,Z{REAL}
ADD X,Y
MOV Y,X
MOVB (Y),#1{INTEGER}
MOV Y,C{REAL}
MOV X,Z{REAL}
ADD X,Y
MOV Y,#1{INTEGER}
ADD X,Y
MOV Y,X
MOVB (Y),#1{INTEGER}
NOP
MOV Y,#0.1{REAL}
PUSH Y
MOV Y,#1{INTEGER}
RND X,Y
POP Y
LT X,Y
PUSH X
MOV Y,#0.0{REAL}
MOV X,R{REAL}
EQ X,Y
POP Y
AND X,Y
CMP X,#0{REAL}
JNE NSKIP37
JMP SKIP37
NSKIP37:
NOP
MOV Y,#2{INTEGER}
RND X,Y
MOV Y,X
INT X,Y
MOV Y,Z{REAL}
ADD X,Y
MOV R{REAL},X
SKIP37:
55:
NOP
MOV Y,#4{INTEGER}
PUSH Y
MOV Y,#1{INTEGER}
PUSH Y
MOV Y,#0.0{REAL}
MOV I{REAL},Y
MOV A,(I{REAL})
JSR INITFOR
NOP
MOV Y,#0.0{REAL}
MOV X,I{REAL}
PUSH Y
MOV G,S[]{REAL}
CHGCTX #0
JSR ARRAYACCESS
POP Y
EQ X,Y
CMP X,#0{REAL}
JNE NSKIP38
JMP SKIP38
NSKIP38:
NOP
MOV Y,I{REAL}
PUSH Y
NOP
POP X
MOV Y,#6{INTEGER}
MOV G,S[]{REAL}
JSR ARRAYSTORE
NOP
MOV Y,I{REAL}
PUSH Y
NOP
POP X
MOV Y,Z{REAL}
MOV G,P[]{REAL}
JSR ARRAYSTORE
NOP
MOV Y,#5{INTEGER}
MOV I{REAL},Y
SKIP38:
56:
MOV A,#0{INTEGER}
JSR NEXT
CMP A,#0{INTEGER}
JE ($JUMP)
57:
MOVB 36876,#0{INTEGER}
MOVB 36877,#0{INTEGER}
JSR RETURN
RTS
58:
NOP
MOV Y,I{REAL}
PUSH Y
NOP
MOV Y,#1{INTEGER}
MOV X,I{REAL}
PUSH Y
MOV G,S[]{REAL}
CHGCTX #0
JSR ARRAYACCESS
POP Y
SUB X,Y
MOV Y,X
POP X
MOV G,S[]{REAL}
JSR ARRAYSTORE
NOP
MOV X,I{REAL}
MOV G,S[]{REAL}
CHGCTX #0
JSR ARRAYACCESS
MOV A{REAL},X
NOP
MOV X,I{REAL}
MOV G,P[]{REAL}
CHGCTX #0
JSR ARRAYACCESS
MOV Z{REAL},X
NOP
MOV Y,#3{INTEGER}
MOV X,A{REAL}
EQ X,Y
CMP X,#0{REAL}
JNE NSKIP39
JMP SKIP39
NSKIP39:
MOV Y,Z{REAL}
MOVB (Y),#50{INTEGER}
MOV Y,#1{INTEGER}
MOV X,Z{REAL}
ADD X,Y
MOV Y,X
MOVB (Y),#51{INTEGER}
MOV Y,C{REAL}
MOV X,Z{REAL}
ADD X,Y
MOV Y,X
MOVB (Y),#2{INTEGER}
MOV Y,C{REAL}
MOV X,Z{REAL}
ADD X,Y
MOV Y,#1{INTEGER}
ADD X,Y
MOV Y,X
MOVB (Y),#2{INTEGER}
SKIP39:
60:
NOP
MOV Y,#2{INTEGER}
MOV X,A{REAL}
EQ X,Y
CMP X,#0{REAL}
JNE NSKIP40
JMP SKIP40
NSKIP40:
MOV Y,Z{REAL}
MOVB (Y),#52{INTEGER}
MOV Y,#1{INTEGER}
MOV X,Z{REAL}
ADD X,Y
MOV Y,X
MOVB (Y),#53{INTEGER}
SKIP40:
61:
NOP
MOV Y,#1{INTEGER}
MOV X,A{REAL}
EQ X,Y
CMP X,#0{REAL}
JNE NSKIP41
JMP SKIP41
NSKIP41:
MOV Y,Z{REAL}
MOVB (Y),#54{INTEGER}
MOV Y,#1{INTEGER}
MOV X,Z{REAL}
ADD X,Y
MOV Y,X
MOVB (Y),#55{INTEGER}
SKIP41:
62:
NOP
MOV Y,#0{INTEGER}
MOV X,A{REAL}
EQ X,Y
CMP X,#0{REAL}
JNE NSKIP42
JMP SKIP42
NSKIP42:
MOV Y,Z{REAL}
MOVB (Y),#160{INTEGER}
MOV Y,#1{INTEGER}
MOV X,Z{REAL}
ADD X,Y
MOV Y,X
MOVB (Y),#160{INTEGER}
SKIP42:
63:
JSR RETURN
RTS
64:
NOP
MOV A,#          {STRING}
JSR STROUT
65:
NOP
MOV A,#{left}{left}{left}{left}{left}{left}{left}{left}{left}{left}{STRING}
JSR STROUT
JSR RETURN
RTS
66:
NOP
MOV Y,#999{INTEGER}
MOV I{REAL},Y
NOP
JMP 65
67:
NOP
MOV A,#press fire{STRING}
JSR STROUT
NOP
MOV Y,#20{INTEGER}
MOV MC{REAL},Y
NOP
MOV Y,#1{INTEGER}
MOV N{REAL},Y
NOP
MOV Y,#0.0{REAL}
MOV G{REAL},Y
JMP 65
68:
NOP
MOV Y,#8119{INTEGER}
MOV X,R{REAL}
GT X,Y
CMP X,#0{REAL}
JNE NSKIP43
JMP SKIP43
NSKIP43:
MOV Y,C{REAL}
MOV X,R{REAL}
ADD X,Y
MOV Y,X
MOVB (Y),#1{INTEGER}
SKIP43:
69:
NOP
MOV Y,#60{INTEGER}
PUSH Y
MOV Y,R{REAL}
MOVB X,(Y)
POP Y
EQ X,Y
CMP X,#0{REAL}
JNE NSKIP44
JMP SKIP44
NSKIP44:
MOV Y,R{REAL}
MOVB (Y),#160{INTEGER}
SKIP44:
70:
NOP
MOV Y,#22{INTEGER}
MOV X,R{REAL}
ADD X,Y
MOV R{REAL},X
NOP
MOV Y,#8120.0{REAL}
MOV X,R{REAL}
SUB X,Y
MOV Z{REAL},X
NOP
MOV Y,#3{INTEGER}
MOV X,E{REAL}
ADD X,Y
MOV Y,X
MOV X,Z{REAL}
LT X,Y
PUSH X
MOV Y,E{REAL}
MOV X,Z{REAL}
GTEQ X,Y
POP Y
AND X,Y
CMP X,#0{REAL}
JNE NSKIP45
JMP SKIP45
NSKIP45:
JMP 75
SKIP45:
71:
NOP
MOV Y,#21{INTEGER}
MOV X,Z{REAL}
GT X,Y
CMP X,#0{REAL}
JNE NSKIP46
JMP SKIP46
NSKIP46:
NOP
MOV Y,#22{INTEGER}
MOV X,Z{REAL}
SUB X,Y
MOV Z{REAL},X
NOP
MOV Y,#3{INTEGER}
MOV X,E{REAL}
ADD X,Y
MOV Y,X
MOV X,Z{REAL}
LT X,Y
PUSH X
MOV Y,E{REAL}
MOV X,Z{REAL}
GTEQ X,Y
POP Y
AND X,Y
CMP X,#0{REAL}
JNE NSKIP47
JMP SKIP47
NSKIP47:
JMP 75
SKIP47:
SKIP46:
72:
NOP
MOV Y,#21{INTEGER}
MOV X,Z{REAL}
GT X,Y
CMP X,#0{REAL}
JNE NSKIP48
JMP SKIP48
NSKIP48:
NOP
MOV Y,#0.0{REAL}
MOV R{REAL},Y
JSR RETURN
RTS
SKIP48:
73:
NOP
MOV Y,#160{INTEGER}
PUSH Y
MOV Y,R{REAL}
MOVB X,(Y)
POP Y
EQ X,Y
CMP X,#0{REAL}
JNE NSKIP49
JMP SKIP49
NSKIP49:
MOV Y,R{REAL}
MOVB (Y),#60{INTEGER}
MOV Y,C{REAL}
MOV X,R{REAL}
ADD X,Y
MOV Y,X
MOVB (Y),#4{INTEGER}
SKIP49:
74:
JSR RETURN
RTS
75:
NOP
MOV Y,#0.0{REAL}
MOV R{REAL},Y
NOP
MOV Y,#10{INTEGER}
MOV MC{REAL},Y
NOP
MOV Y,#1{INTEGER}
RND X,Y
MOV W{REAL},X
NOP
MOV Y,#0.3{REAL}
MOV X,W{REAL}
LT X,Y
CMP X,#0{REAL}
JNE NSKIP50
JMP SKIP50
NSKIP50:
NOP
MOV A,#sticky bat{STRING}
JSR STROUT
NOP
MOV Y,#3{INTEGER}
MOV SB{REAL},Y
JMP 65
SKIP50:
76:
NOP
MOV Y,#6{INTEGER}
MOV X,D{REAL}
LT X,Y
PUSH X
MOV Y,#0.7{REAL}
MOV X,W{REAL}
LT X,Y
POP Y
AND X,Y
CMP X,#0{REAL}
JNE NSKIP51
JMP SKIP51
NSKIP51:
NOP
MOV A,#extra ball{STRING}
JSR STROUT
NOP
MOV Y,#1{INTEGER}
MOV X,D{REAL}
ADD X,Y
MOV D{REAL},X
MOV Y,#8163{INTEGER}
ADD X,Y
MOV Y,X
MOVB (Y),#59{INTEGER}
MOV Y,D{REAL}
MOV X,#38883.0{REAL}
ADD X,Y
MOV Y,X
MOVB (Y),#3{INTEGER}
JMP 65
SKIP51:
77:
NOP
MOV A,#500 points{STRING}
JSR STROUT
JSR GOSUB
JSR 65
NOP
MOV Y,#500{INTEGER}
MOV X,K{REAL}
ADD X,Y
MOV K{REAL},X
78:
NOP
JSR FRE
MOV W{REAL},X
NOP
JSR COMPACT
MOV Y,K{REAL}
CHGCTX #1
JSR STR
JSR COPYSTR
MOV A${STRING},A
NOP
MOV B,A${STRING}
CHGCTX #0
JSR LEN
MOV W{REAL},X
NOP
MOV Y,W{REAL}
PUSH Y
NOP
MOV Y,#1{INTEGER}
PUSH Y
NOP
MOV Y,#1{INTEGER}
MOV I{REAL},Y
MOV A,(I{REAL})
JSR INITFOR
MOV Y,I{REAL}
MOV X,#8185{INTEGER}
ADD X,Y
MOV Y,W{REAL}
SUB X,Y
PUSH X
JSR COMPACT
MOV C,I{REAL}
MOV D,#1{INTEGER}
CHGCTX #1
MOV B,A${STRING}
JSR MID
MOV B,A
CHGCTX #0
JSR ASC
MOV Y,#128{INTEGER}
ADD X,Y
POP Y
MOVB (Y),X
MOV A,#0{INTEGER}
JSR NEXT
CMP A,#0{INTEGER}
JE ($JUMP)
JSR RETURN
RTS
79:
NOP
MOV Y,#7520{INTEGER}
MOV Q{REAL},Y
NOP
MOV Y,#11{INTEGER}
PUSH Y
MOV Y,#1{INTEGER}
PUSH Y
MOV Y,#0.0{REAL}
MOV X{REAL},Y
MOV A,(X{REAL})
JSR INITFOR
JSR READSTR
MOV A${STRING},A
NOP
MOV B,A${STRING}
CHGCTX #0
JSR LEN
PUSH X
NOP
MOV Y,#4{INTEGER}
PUSH Y
NOP
MOV Y,#1{INTEGER}
MOV I{REAL},Y
MOV A,(I{REAL})
JSR INITFOR
NOP
MOV Y,#3{INTEGER}
PUSH Y
MOV Y,#1{INTEGER}
PUSH Y
MOV Y,#0.0{REAL}
MOV J{REAL},Y
MOV A,(J{REAL})
JSR INITFOR
NOP
MOV Y,J{REAL}
PUSH Y
NOP
JSR COMPACT
MOV Y,J{REAL}
MOV X,I{REAL}
ADD X,Y
MOV C,X
MOV D,#1{INTEGER}
CHGCTX #1
MOV B,A${STRING}
JSR MID
MOV B,A
CHGCTX #0
JSR ASC
MOV Y,#32{INTEGER}
SUB X,Y
MOV Y,X
POP X
MOV G,P[]{REAL}
JSR ARRAYSTORE
NOP
MOV Y,#18{INTEGER}
MOV X,J{REAL}
PUSH Y
MOV G,P[]{REAL}
CHGCTX #0
JSR ARRAYACCESS
POP Y
EQ X,Y
CMP X,#0{REAL}
JNE NSKIP52
JMP SKIP52
NSKIP52:
NOP
MOV Y,J{REAL}
PUSH Y
NOP
POP X
MOV Y,#2{INTEGER}
MOV G,P[]{REAL}
JSR ARRAYSTORE
SKIP52:
80:
MOV A,#0{INTEGER}
JSR NEXT
CMP A,#0{INTEGER}
JE ($JUMP)
MOV Y,Q{REAL}
PUSH Y
MOV Y,#16{INTEGER}
MOV X,#1{INTEGER}
PUSH Y
MOV G,P[]{REAL}
CHGCTX #0
JSR ARRAYACCESS
POP Y
DIV X,Y
PUSH X
MOV Y,#4{INTEGER}
MOV X,#0{INTEGER}
PUSH Y
MOV G,P[]{REAL}
CHGCTX #0
JSR ARRAYACCESS
POP Y
MUL X,Y
POP Y
ADD X,Y
POP Y
MOVB (Y),X
MOV Y,#1{INTEGER}
MOV X,Q{REAL}
ADD X,Y
PUSH X
MOV Y,#4{INTEGER}
MOV X,#2{INTEGER}
PUSH Y
MOV G,P[]{REAL}
CHGCTX #0
JSR ARRAYACCESS
POP Y
DIV X,Y
PUSH X
MOV Y,#15{INTEGER}
MOV X,#1{INTEGER}
PUSH Y
MOV G,P[]{REAL}
CHGCTX #0
JSR ARRAYACCESS
POP Y
AND X,Y
MOV A,#4{INTEGER}
SHL X,A
POP Y
ADD X,Y
POP Y
MOVB (Y),X
MOV Y,#2{INTEGER}
MOV X,Q{REAL}
ADD X,Y
PUSH X
MOV X,#3{INTEGER}
MOV G,P[]{REAL}
CHGCTX #0
JSR ARRAYACCESS
PUSH X
MOV Y,#3{INTEGER}
MOV X,#2{INTEGER}
PUSH Y
MOV G,P[]{REAL}
CHGCTX #0
JSR ARRAYACCESS
POP Y
AND X,Y
MOV A,#6{INTEGER}
SHL X,A
POP Y
ADD X,Y
POP Y
MOVB (Y),X
NOP
MOV Y,#3{INTEGER}
MOV X,Q{REAL}
ADD X,Y
MOV Q{REAL},X
MOV A,#0{INTEGER}
JSR NEXT
CMP A,#0{INTEGER}
JE ($JUMP)
MOV A,#0{INTEGER}
JSR NEXT
CMP A,#0{INTEGER}
JE ($JUMP)
JSR RETURN
RTS
81:
82:
83:
84:
JSR END
RTS
