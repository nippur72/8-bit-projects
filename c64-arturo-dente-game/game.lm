include "macros_16.lm"
include "macros.lm"
include "c64.lm"

   processor 6502
   org BASIC_RAM

; ====================
; Game by Arturo Dente
; ====================

basic start
   10 rem f64  game per c64
   15 zz=rnd(-ti) 

   16 sc=0
   18 poke 646,2:poke53280,2:poke53281,0
   20 empt$="                   ":rem lo spazio libero di ogni riga
   30 ln$="{cbm +}"+empt$+"{cbm +}":rem la riga di strada
   40 rc=7:rem limite spazi ke posso anteporre a ln$
   50 sp=rc:rem sp sono gli spazi da anteporre alla riga di strada
   60 lc=0:rem cache del precedente numero random
   70 rp=0:rem contatore ripetizioni fatte di riga
   75 dim c
   78 dim ob
   80 print"{clear}{down}{down}{down}{down}{down}{down}{down}{down}{down}{down}{down}{down}{down}{down}{down}{down}{down}{down}{down}{down}{down}{down}{down}{down}"
   90 v=53248 : rem start of display chip

   100 sys {prepara_sprite}
   
   // posizione iniziale
   140 sys {posizione_iniziale}

   // game loop
   150 sys {muove_astronave}

   360 rem scrolling
   370 c=int(rnd(1)*3)+1:rem 1:aumenta spazi, 2:diminuisce spazi,3:invariato
   380 if lc=0 and c=1 then sp=sp+1:rp=rp+1
   390 if lc=0 and c=2 then sp=sp-1:rp=rp+1
   400 if lc=1 then sp=sp+1:rp=rp+1:rem lc<>0 quindi cache c precedente in corso,
   410 if lc=2 then sp=sp-1:rp=rp+1:rem aumentando le volte ke ripropongo il trend
   420 if lc=3 then rp=rp+1:rem anche idle aumenta rp
   430 if sp<rc then sp=rc
   440 if sp>2*rc then sp=2*rc

   481 ob=int(rnd(1)*3) +1
   490 if ob<3 or sc<6 then gosub 800:rem metto gli spazi prima della strada
   492 if ob=3 and sc>5 then gosub 900:rem metto spazi prima della strada e ostacolo
   495 if peek(53279)=4 goto 1000
   500 if rp>rc then rp=0:lc=c:rem reset condizioni iniziali scrolling
   505 sc=sc+1
   510 goto 150      

   800 poke 1984+sp,102   
   801 poke 1984+sp+19,102
   802 print
   803 return

   900 ob=int(rnd(1)*18)+1 
   901 poke 1984+sp,102   
   902 poke 1984+sp+19,102
   903 poke 1984+sp+ob,81
   904 print
   905 return

   1000 print"{clear}"
   1005 poke v+21,0
   1008 restore
   1010 print "fine corsa"
   1015 print "linee superate:"+str$(sc):print "ancora?(y o n)"
   1016 get y$:if y$="" goto 1016 
   1018 if y$="y" then goto 16
   1020 end

basic end

; =========
; VARIABILI
; =========

joy   byte 0
delta byte 0
posx  byte 0
posy  byte 0

const spritex = 53248+4
const spritey = 53248+5

; =====================================================================
; Name: prepara_sprite
; Purpose: attiva lo sprite 2 e ne carica la grafica
; =====================================================================

sub prepara_sprite()
   ld 53248+21, #4    ; enable sprite 2
   ld 53289, #4
   ld 2042, #13       ; sprite 2 data from block 13

   for x=#0 to #62
      lda sprite_data,x
      sta 832,x
   next
end sub  

; =====================================================================
; Name: posizione_iniziale
; Purpose: imposta la posizione iniziale della navicella in posx, posy
; =====================================================================

sub posizione_iniziale()
   ld posx, #165
   ld posy, #50
   ld delta, #3    ; delta pixel di movimento sprite
end sub 

; =====================================================================
; Name: muove_astronave
; Purpose: legge il joystick in porta 2 e muove l'astronave con la
;          relativa accelerazione
; =====================================================================

// linee basic da 150 a 350
sub muove_astronave()

   ; joystick porta 2
   ld joy, 56320

   ; accelerazione
   if joy <> #127 then 
      inc delta
      if delta > #10 then ld delta, #10   ; non esageriamo      
   else
      dec delta
      if delta < #3 then ld delta, #3     ; non esageriamo      
   end if
   
   ; rem movimenti navicella
   if joy = #126 then sub posy, delta
   if joy = #125 then add posy, delta
   if joy = #123 then sub posx, delta
   if joy = #119 then add posx, delta

   if joy = #122 then 
      sub posy, delta
      sub posx, delta
   end if
   if joy = #118 then 
      sub posy, delta
      add posx, delta
   end if
   if joy = #121 then 
      add posy, delta
      sub posx, delta
   end if
   if joy = #117 then 
      add posy, delta
      add posx, delta
   end if

   if posx < #20  then ld posx, #20   ; bordi
   if posx > #255 then ld posx, #255  ; bordi
   if posy < #50  then ld posy, #50   ; bordi
   if posy > #237 then ld posy, #237  ; bordi

   ld spritex, posx  ; update x coordinates
   ld spritey, posy  ; update y coordinates
end sub

// linee basic da 10000 a 10110
sprite_data:
   ;      012345670123456701234567
   sprite ........................
   sprite ........................
   sprite ........................          
   sprite ........................
   sprite ........................
   sprite ........................
   sprite ........................
   sprite ........................
   sprite XXXXXXXXXXXXXXXXXXXXXXXX
   sprite .X..X...X......X...X..X.
   sprite ..X..XXX........XXX..X..
   sprite ...X................X...
   sprite ....X......XX......X....
   sprite .....X....X..X....X.....
   sprite ......X...X..X...X......
   sprite .......X..X..X..X.......
   sprite ........X..XX..X........
   sprite .........X....X.........
   sprite ..........X..X..........
   sprite ...........XX...........
   sprite ........................

/*
http://forum.6502.org/viewtopic.php?f=2&t=5247&start=15
  lda seedhi
  lsr
  rol seedlo
  bcc noeor
  eor #$B4
noeor
  sta seedhi
  eor seedlo
*/